<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:annotation-config />

	<mvc:annotation-driven>
		<mvc:async-support default-timeout="900000" />
	</mvc:annotation-driven>

	<context:component-scan base-package="lu.itrust.business" />

	<util:properties id="propertyConfigurer" location="classpath:application.properties,classpath:deployment.properties,classpath:deployment-ldap.properties" />

	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${app.settings.background.task.core.pool.size}" />
		<property name="maxPoolSize" value="${app.settings.background.task.max.pool.size}" />
		<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<bean id="emailTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean>

	<task:scheduler id="scheduler" pool-size="${app.settings.scheduler.pool.size}" />

	<task:annotation-driven executor="executor" scheduler="scheduler" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<context:property-placeholder properties-ref="propertyConfigurer" />

	<mvc:resources mapping="/images/**" location="/WEB-INF/images/" cache-period="${app.settings.static.resource.caching.age}" />

	<mvc:resources mapping="/fonts/**" location="/WEB-INF/fonts/" cache-period="${app.settings.static.resource.caching.age}" />

	<mvc:resources mapping="/css/**" location="/WEB-INF/css/" cache-period="${app.settings.static.resource.caching.age}" />

	<mvc:resources mapping="/js/**" location="/WEB-INF/js/" cache-period="${app.settings.static.resource.caching.age}" />

	<bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:/languages/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="fallbackToSystemLocale" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="themeSource" class="org.springframework.ui.context.support.ResourceBundleThemeSource">
		<property name="basenamePrefix" value="themes." />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver">
		<property name="defaultThemeName" value="default" />
		<property name="cookieName" value="TS_THEME_NAME" />
	</bean>

	<mvc:interceptors>
		<!-- Changes the locale when a 'lang' request parameter is sent; e.g. /?lang=fr -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>

		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
			<property name="paramName" value="theme"/> 
		</bean>

		<bean name="openSessionInViewInterceptor" class="org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor">
			<property name="sessionFactory" ref="sessionFactory" />
		</bean>
	</mvc:interceptors>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" />

	<bean id="baselineVersion" class="org.flywaydb.core.api.MigrationVersion" factory-method="fromVersion">
		<constructor-arg value="${app.settings.database.version}" />
	</bean>

	<bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
		<property name="dataSource" ref="dataSource" />
		<property name="baselineOnMigrate" value="false" />
		<property name="table" value="SchemaVersion" />
		<property name="baselineVersion" ref="baselineVersion" />
		<property name="locations">
			<list>
				<value>classpath:lu/itrust/business/TS/database/migration</value>
				<value>classpath:/migration</value>
			</list>
		</property>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" depends-on="flyway">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="lu.itrust.business.TS" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">${jdbc.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<bean id="trickLogManager" class="lu.itrust.business.TS.component.TrickLogManager" factory-method="getInstance">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="${app.settings.email.template}" />
	</bean>

	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${app.settings.smtp.host}" />
		<property name="port" value="${app.settings.smtp.port}" />
		<!-- <property name="username" value="${app.settings.smtp.username}" />
		<property name="password" value="${app.settings.smtp.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${app.settings.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${app.settings.smtp.starttls}</prop>
			</props>
		</property> -->
	</bean>

	<!-- File Uploader -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean class="lu.itrust.business.TS.usermanagement.listner.helper.PasswordEncryptionHelper">
		<property name="password" value="${app.settings.password.ecryption.key}" />
	</bean>

	<import resource="spring-security.xml" />

</beans>