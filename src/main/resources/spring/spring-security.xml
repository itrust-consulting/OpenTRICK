<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="methodSecurityExpressionHandler" />
	</global-method-security>

	<!-- API -->

	<!-- IDS API -->
	<http pattern="/Api/ids/**" realm="TRICK Service application" authentication-manager-ref="apiAuthenticationManager" auto-config="false"
		entry-point-ref="apiAuthenticationEntryPoint" create-session="stateless">
		<cors />
		<custom-filter ref="apiAuthenticationFilter" position="FORM_LOGIN_FILTER" />
		<!-- Authorise access -->
		<intercept-url pattern="/Api/ids/**" access="hasRole('ROLE_IDS')" requires-channel="https" />
		<!-- Deny Access -->
		<!-- <intercept-url pattern="/Api/ids/**" access="denyAll" requires-channel="https"/> -->
		<csrf disabled="true" />
	</http>

	<!-- DATA API -->
	<http pattern="/Api/data/**" realm="TRICK Service application">
		<cors />
		<!-- Authorise access -->
		<intercept-url pattern="/Api/data/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_SUPERVISOR','ROLE_CONSULTANT')" requires-channel="https" />
		<!-- Deny Access -->
		<!-- <intercept-url pattern="/Api/data/**" access="denyAll" requires-channel="https"/> -->
		<csrf disabled="true" />
		<http-basic />
	</http>

	<beans:bean id="apiAuthenticationFilter" class="lu.itrust.business.TS.usermanagement.helper.ApiAuthenticationFilter">
		<beans:constructor-arg ref="apiAuthenticationManager" />
		<beans:constructor-arg ref="apiAuthenticationEntryPoint" />
	</beans:bean>

	<beans:bean class="lu.itrust.business.TS.usermanagement.helper.ApiAuthenticationManager" id="apiAuthenticationManager" />

	<beans:bean class="lu.itrust.business.TS.usermanagement.helper.ApiAuthenticationEntryPoint" id="apiAuthenticationEntryPoint" />
	<!-- end API -->
	<http use-expressions="false" entry-point-ref="loginUrlAuthenticationEntryPoint" auto-config="false" authentication-manager-ref="authenticationManager">
		<intercept-url pattern="/Login" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/Register" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/DoRegister" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/static/**" access="ROLE_USER,ROLE_ADMIN,ROLE_SUPERVISOR,ROLE_CONSULTANT" />
		<custom-filter ref="customUsernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="otpAuthenticationFilter" after="FORM_LOGIN_FILTER" />
		<custom-filter ref="otpAuthenticationProcessingFilter" before="OPENID_FILTER" />
		<logout logout-success-url="/Home" logout-url="/signout" invalidate-session="true" delete-cookies="TS_SESSION_ID" />
		<session-management session-fixation-protection="changeSessionId" />
	</http>

	<beans:bean id="authenticationSuccessHandler" class="lu.itrust.business.TS.usermanagement.helper.CustomAuthenticationSuccessHandler" p:defaultTargetUrl="/Home" />
	
	<beans:bean id="authenticationFailureHandler" class="lu.itrust.business.TS.usermanagement.helper.CustomAuthenticationFailureHandler" p:defaultFailureUrl="/Login/Error" />
	
	<beans:bean id="customUsernamePasswordAuthenticationFilter" class="lu.itrust.business.TS.usermanagement.helper.CustomUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/signin" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<beans:property name="continueChainBeforeSuccessfulAuthentication" value="${app.settings.otp.enable}" />
		<beans:property name="enable2FA" value="${app.settings.otp.enable}" />
		<beans:property name="force2FA" value="${app.settings.otp.force}" />
	</beans:bean>

	<beans:bean id="otpAuthenticationFilter" class="lu.itrust.business.TS.usermanagement.helper.OTPAuthenticationFilter" p:url="/signin" p:redirectURL="/OTP/Options" />
		
	<beans:bean id="otpAuthenticationProcessingFilter" class="lu.itrust.business.TS.usermanagement.helper.OTPAuthenticationProcessingFilter">
		<beans:constructor-arg name="url" value="/OTP/Authorise" />
		<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
	</beans:bean>

	<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint" p:loginFormUrl="/Login" />
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories" factory-method="createDelegatingPasswordEncoder" />

	<beans:bean id="methodSecurityExpressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="permissionEvaluator" />
	</beans:bean>

	<beans:bean id="permissionEvaluator" class="lu.itrust.business.permissionevaluator.PermissionEvaluatorImpl" />
	
	<beans:bean id="firewall" class="org.springframework.security.web.firewall.StrictHttpFirewall"/>
	
	<http-firewall ref="firewall" />
	
	<beans:import resource="authentication-manager.xml" />

</beans:beans>
