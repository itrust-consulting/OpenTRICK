<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="methodSecurityExpressionHandler" />
	</global-method-security>
	
	<!-- IDS API-->
	<http pattern="/Api/ids/**"  realm="TRICK Service application" authentication-manager-ref="apiAuthenticationManager" auto-config="false" entry-point-ref="apiAuthenticationEntryPoint"   create-session="stateless">
		<custom-filter ref="apiAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
		
		<!-- Authorise access  -->
		<intercept-url pattern="/Api/ids/**" access="hasRole('ROLE_IDS')" requires-channel="https"/>
		
		<!-- Deny Access -->
		<!-- <intercept-url pattern="/Api/ids/**" access="denyAll" requires-channel="https"/> -->
		
		<csrf disabled="true"/>
	</http>
	
	<!-- DATA API-->
	<http pattern="/Api/data/**"  realm="TRICK Service application">
		
		<!-- Authorise access  -->
		<intercept-url pattern="/Api/data/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_SUPERVISOR','ROLE_CONSULTANT')" requires-channel="https"/>
		
		<!-- Deny Access -->
		<!-- <intercept-url pattern="/Api/data/**" access="denyAll" requires-channel="https"/> -->
		<csrf disabled="true"/>
		<http-basic/>
	</http>
	
	<http use-expressions="false" realm="TRICK Service application">
		<intercept-url pattern="/Login" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/Register" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/DoRegister" access="ROLE_ANONYMOUS" />
		<http-basic/>
		<form-login login-page="/Login" default-target-url="/Home" login-processing-url="/signin" authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-url="/Login/Error" authentication-failure-handler-ref="customAuthenticationFailureHandler" />
		<logout logout-success-url="/Home" logout-url="/signout" invalidate-session="true" delete-cookies="TS_SESSION_ID"/>
	</http>
	
	<beans:bean id="firewall" class="org.springframework.security.web.firewall.StrictHttpFirewall"/>
	
	<http-firewall ref="firewall" />

	<beans:import resource="authentication-manager.xml" />
	
	<beans:bean id="authenticationSuccessHandler" class="lu.itrust.business.ts.usermanagement.helper.CustomAuthenticationSuccessHandler" />

	<beans:bean id="customAuthenticationFailureHandler" class="lu.itrust.business.ts.usermanagement.helper.CustomAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/Login/Error" />
	</beans:bean>

	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories" factory-method="createDelegatingPasswordEncoder" />

	<beans:bean id="methodSecurityExpressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="permissionEvaluator" />
	</beans:bean>

	<beans:bean id="permissionEvaluator" class="lu.itrust.business.permissionevaluator.PermissionEvaluatorImpl" />
	
	<!-- IDS API-->
	<beans:bean class="lu.itrust.business.ts.usermanagement.helper.ApiAuthenticationManager" id="apiAuthenticationManager" />
	<beans:bean class="lu.itrust.business.ts.usermanagement.helper.ApiAuthenticationEntryPoint" id="apiAuthenticationEntryPoint" />
	<beans:bean id="apiAuthenticationFilter" class="lu.itrust.business.ts.usermanagement.helper.ApiAuthenticationFilter">
		<beans:constructor-arg ref="apiAuthenticationManager"/>
		<beans:constructor-arg ref="apiAuthenticationEntryPoint"/>
	</beans:bean>

</beans:beans>
