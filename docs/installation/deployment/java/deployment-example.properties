 #Database
#To support unicode:
#1. Make sure your database uses UTF-8 collation and all tables use UTF-8 chartset
#2. Add this to database URL: &characterEncoding=utf8&useUnicode=true
app.settings.database.url=jdbc:mysql://localhost:3306/trickservice
app.settings.database.url.args=?autoReconnect=true&verifyServerCertificate=false&useSSL=true&requireSSL=false
#Database URL
jdbc.databaseurl=${app.settings.database.url}${app.settings.database.url.args}
jdbc.username=root
jdbc.password=root
jdbc.time_zone=UTC
#database caching level 2
jdbc.cache.use_query_cache=true
jdbc.cache.use_second_level=true
jdbc.cache.storage.type=mixte
#Application settings
app.settings.data.folder=/WEB-INF/data/
app.settings.hostserver=https://trickservice.com
app.settings.trusted.proxy=${app.settings.hostserver}
#Database version 1.8 for empty database
app.settings.database.version=1.8
#email
app.settings.smtp.host=smtp.itrust.lu
app.settings.smtp.port=25
app.settings.domain=itrust.lu
app.settings.smtp.username=no-reply@trickservice.com
app.settings.smtp.password=PasSword
#two factor authentication
app.settings.otp.name=TS-Prod
app.settings.otp.enable=true
app.settings.otp.force=false
#OTP Email code validity in millisecond.
app.settings.otp.attempt.timeout=120000
#Used to encrypt user password (ticketing system)
app.settings.password.ecryption.key=changes it
#5GB
#app.settings.upload.file.max.size 
#Replce by spring.servlet.multipart.max-file-size=5GB
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=100MB
#10MB
app.settings.report.template.max.size=10MB
#20MB
app.settings.report.refurbish.max.size=20MB
#cron, every 5 minutes between 3h00 and 5h00
app.settings.cleaner.cron.setup=0 0/1 * * * *
#Max size by transaction (x2)
app.settings.cleaner.data.max.size=200
app.settings.trusted.proxy=*
#y: year, M: months, d: day, h: hour, m: minute, s: second, 0 : disabled
#6y6M: 6year and 6 months, 6h6m: 6hours and 6 minutes, 120s: 120 second, 6M6m: 6months and 6minutes, 0: disabled.
app.settings.cleaner.data.sqlite.max.old=1d
app.settings.cleaner.data.report.max.old=1d
#logger
app.settings.logger.server.host=vm-lan-logger.itrust.lu
app.settings.logger.server.ca_jks_file=classpath:elkCA.jks
app.settings.logger.server.ca_jks_password=2KWH7fMD7Xs5lL5EnkQX
app.settings.logger.server.port=5140
app.settings.support.email=dev@itrust.lu
#Authentication manager -> spring/authentication-manager.xml
#LDAP
app.settings.ldap.allowed.authentication=true
#URL, add port if need.
#Example: ldap://itrust.lu:875 or ldaps://itrust.lu for port 636, ldap://itrust.lu for port 389. 
#Default port 33389 -> spring/authentication-manager.xml -> ldap-server -> port
app.settings.ldap.server.url=ldaps://trickservice.com:636
#Username (DN) of the "manager" user identity which will be used to authenticate to a (non-embedded) LDAP server. If omitted, anonymous access will be used;
app.settings.ldap.server.manager_dn=
#The password for the manager DN. This is required if the manager-dn is specified;
app.settings.ldap.server.manager_password=
#Optional root suffix for the embedded LDAP server.
app.settings.ldap.server.root=dc=trickservice,dc=lu
#The LDAP attribute name which contains the role name which will be used within Spring Security.
app.settings.ldap.group_role_attribute=cn
#Search base for group membership searches. Defaults to "" (searching from the root)
app.settings.ldap.group_search_base=ou=Groups,dc=trickservice,dc=com
#The LDAP filter used to search for users (optional). For example "(uid={0})". The substituted parameter is the user's login name.
app.settings.ldap.user_search_filter=(uid={0})
#Search base for user searches. Defaults to "". Only used with a 'user-search-filter'
app.settings.ldap.user_search_base=ou=Users,dc=trickservice,dc=com
#A specific pattern used to build the user's DN, for example "uid={0},ou=people". The key "{0}" must be present and will be substituted with the username.
app.settings.ldap.user_dn_pattern=uid={0},ou=Users
#{0}: The substituted parameter is the DN of the user , {1}: Username 
app.settings.ldap.group_search_filter=(memberUid={1})
#Attribute to retrieve user data
app.settings.ldap.attribute.firstname=givenName
app.settings.ldap.attribute.lastname=sn
#User object
app.settings.ldap.attribute.user_password=userPassword
#Load role from User object
app.settings.ldap.role.attributes
#Convert organisation roles to TS roles, use ',' as separator
app.settings.ldap.role.supervisor=
app.settings.ldap.role.admin
app.settings.ldap.role.consultant
app.settings.ldap.role.user
#Default role if is empty
app.settings.ldap.default.role=ROLE_USER
#Load user's role for each connexion
app.settings.ldap.always.load.role=true
#AD Role prefix, empty if role starts with ROLE_
app.settings.ldap.role.prefix
#logging.level.root=WARN
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.web.socket.config.WebSocketMessageBrokerStats=DEBUG
#logging.level.org.hibernate=ERROR
#logging.level.org.springframework.security=DEBUG
#spring boot
server.port=8443
server.ssl.enabled=true
security.require-ssl=true
server.http2.enabled=true
server.ssl.key-store=classpath:trickservice.jks
server.ssl.key-store-password=trickservice
#default profile : p-auth-std, p-auth-ldap, p-auth-ad
spring.profiles.active=p-auth-std